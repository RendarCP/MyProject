<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>